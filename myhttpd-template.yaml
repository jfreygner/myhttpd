apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: myhttpd-example
objects:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      app: myhttpd
      app.kubernetes.io/component: myhttpd
      app.kubernetes.io/instance: myhttpd
    name: myhttpd
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/imported-from: quay.io/jfreygner/myhttpd:1.0
      from:
        kind: DockerImage
        name: quay.io/jfreygner/myhttpd:1.0
      generation: 3
      importPolicy:
        importMode: Legacy
        scheduled: true
      name: "1.0"
      referencePolicy:
        type: Source
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"myhttpd:1.0"},"fieldPath":"spec.template.spec.containers[?(@.name==\"myhttpd\")].image"}]'
    labels:
      app: myhttpd
      app.kubernetes.io/component: myhttpd
      app.kubernetes.io/instance: myhttpd
    name: myhttpd
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        deployment: myhttpd
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          deployment: myhttpd
      spec:
        containers:
        - image: quay.io/jfreygner/myhttpd@sha256:d9df2f00699c909f7fc46607399eb7f4bae81960fe9abca040f007bce5d26256
          imagePullPolicy: IfNotPresent
          name: myhttpd
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/www/html
            name: myhttpd-volume-1
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: myhttpd-volume-1
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: myhttpd
      app.kubernetes.io/component: myhttpd
      app.kubernetes.io/instance: myhttpd
    name: myhttpd
  spec:
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deployment: myhttpd
    sessionAffinity: None
    type: ClusterIP
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: myhttpd
      app.kubernetes.io/component: myhttpd
      app.kubernetes.io/instance: myhttpd
    name: myhttpd
  spec:
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: myhttpd
      weight: 100
    wildcardPolicy: None
